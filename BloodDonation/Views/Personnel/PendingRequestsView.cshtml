@using BloodDonation.Models;
@using BloodDonation.Utils.Enums;
@model PersonelRequestTransferObject
@{
    ViewBag.Title = "PendingRequestsView";
}


<html lang="en" dir="ltr">
<head>
    <title>Pending Requests - Personnel</title>
    <meta charset="iso-8859-1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css">
    @Styles.Render("~/Styles/style.css")
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js">

    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
    </script>
</head>
<body>

<div id="header">
    <div class="container">
        <div class="row">
            <div id="hgroup" class="col-sm-8 ml-4">
                <div class="row">
                    <a href="#" id="page-title">Pending Requests</a>
                </div>
                <div class="row">
                    <a href="#" id="page-owner">PERSONNEL</a>
                </div>
            </div>
            <form action="login.html" method="post" class="col-sm-1 offset-sm-2">
                @Html.ActionLink("Log Out", "LogOut", "Login", null, new {@class = "btn auth-button"})
            </form>
        </div>
        <nav class="navbar navbar-expand-sm">
            <ul class="navbar-nav">
                <li>@Html.ActionLink("ADD DONATION", "AddDonation", "Personnel", null, new { @class = "nav-link" })</li>
                <li>@Html.ActionLink("SEPARATE COMPONENTS", "SeparateComponents", "Personnel", null, new { @class = "nav-link" })</li>
                <li>@Html.ActionLink("LAB RESULTS", "LabResults", "Personnel", null, new { @class = "nav-link" })</li>
                <li>@Html.ActionLink("ACCOUNT SETTINGS", "PersonalDetails", "Personnel", null, new { @class = "nav-link" })</li>
                <li class="nav-item current">
                    <a href="#" class="nav-link">PENDING REQUESTS</a>
                </li>
                <li>@Html.ActionLink("ACCEPTED REQUESTS", "AcceptedRequests", "Personnel", null, new { @class = "nav-link" })</li>
                <li>@Html.ActionLink("VIEW STORED BLOOD", "ViewStoredBlood", "Personnel", null, new { @class = "nav-link" })</li>
                <li>@Html.ActionLink("VIEW BOOKED DONATIONS", "SeeBookings", "Personnel", null, new { @class = "nav-link" })</li>
            </ul>
        </nav>
    </div>
</div>

<div class="container">
    <div class="card mb-3">
        <div class="card-header">
            Pending Requests:
        </div>

        <div id="map" class="map" style="width:100%;height:50%;margin:auto;"></div>

        <div class="card-body">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">Status</th>
                        <th scope="col">Component</th>
                        <th scope="col">Hospital</th>
                        <th scope="col">Doctor Name</th>
                        <th scope="col">Doctor Email</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Blood Group</th>
                        <th scope="col">RH Type</th>
                        <th scope="col">Urgency</th>
                        <th scope="col">Accept</th>
                    </tr>
                </thead>
                <tbody>


                    <script>
                        var vectorSource = new ol.source.Vector({});
                    </script>

                    <script>
                              var iconFeature = new ol.Feature({
                                 geometry: new ol.geom.Point(ol.proj.fromLonLat([@Model.LonDonationCenter,@Model.LatDonationCenter])),
                                 name: 'Null Island',
                                });

                                     var iconStyle = new ol.style.Style({
                        image: new ol.style.Icon(
                                                {
                                                  anchor: [1, 1],
                                                  anchorXUnits: 'fraction',
                                                  anchorYUnits: 'pixels',
                                                  src: '/marker.png',
                                                  scale: 0.15
                                                })
                                              });

                                              iconFeature.setStyle(iconStyle);
                                            vectorSource.addFeature(iconFeature);

                    </script>


                    @{
        var text = "";
        var method = "";
        var reqID = "1";
        var reqPH = "";
                    }
                    @foreach (var req in Model.listRequests)
    {
                @*!!!!!WATCHOUT THIS IS PENDING REQUESTS AND ACCEPTED REQUESTS 2 in 1 ca nesu'!!!!!*@
switch (Convert.ToString(req.status))
{
    case "BeingProcessed":
        text = "Accept";
        method = "AcceptRequest";
        break;
    default:
        text = "Send Blood";
        method = "SendRequest";
        break;
}
reqID = Convert.ToString(@req.ID);
                <script>
                              var iconFeature = new ol.Feature({
                                 geometry: new ol.geom.Point(ol.proj.fromLonLat([@req.Lon,@req.Lat])),
                                 name: 'Null Island',
                                });

                                     var iconStyle = new ol.style.Style({
                        image: new ol.style.Icon(
                                                {
                                                  anchor: [1, 1],
                                                  anchorXUnits: 'fraction',
                                                  anchorYUnits: 'pixels',
                                                  src: '/blood.png',
                                                  scale: 0.75
                                                })
                                              });

                                              iconFeature.setStyle(iconStyle);
                                            vectorSource.addFeature(iconFeature);

                </script>


                <tr>
                    <td>@req.status</td>
                    <td>@req.bloodType.component</td>
                    <td>
                        @req.hospitalName <br> @req.hospitalLocation
                    </td>
                    <td>@req.doctorName</td>
                    <td>@req.doctorEmail</td>
                    <td>@req.quantity</td>
                    <td>@req.bloodType.Group</td>
                    <td>@req.bloodType.PH</td>
                    <td>@(((DoctorUrgencyLevel)req.urgency).ToString())</td>
                    <td>
                        @Html.ActionLink(@text, @method, "Personnel", new { id = @reqID }, new { @class = "btn btn-success" })
                    </td>
                </tr>
}
                </tbody>
            </table>
        </div>



    </div>

    @*MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPPZ*@


    

    <script>


                                                         var vectorLayer = new ol.layer.Vector({
                        source: vectorSource
                                                          });



                                        var map = new ol.Map({
                        layers: [
                                             new ol.layer.Tile({
                        source: new ol.source.OSM("Simple OSM Map")
                              }), vectorLayer
                                            ],
                                            target: 'map',
                                            controls: [],
                                            view: new ol.View({
                        center: [@Model.LonDonationCenter,@Model.LatDonationCenter],
                                              zoom: 7,
                                              minZoom: 3

                                            })
                                          });

    </script>

    @*MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPPZ*@


</div>

<div class="footer fixed-bottom text-center">
    © 2018 Copyright: Vitamine
</div>

</body>
</html>